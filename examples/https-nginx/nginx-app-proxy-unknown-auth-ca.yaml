# Create a proxy service account and ensure it will use the route "proxy"                                       
apiVersion: v1            
kind: ServiceAccount      
metadata:                 
  name: proxy             
  annotations:            
    serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"nginx-service"}}'   
---
apiVersion: v1
kind: Route
metadata:
  labels:
    app: nginx
  name: nginx-service
  namespace: myproject
spec:
  port:
    targetPort: 8443
  to:
    kind: Service
    name: nginx-service
    weight: 100
  wildcardPolicy: None
  tls:
    termination: passthrough
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app: nginx
---
apiVersion: v1
data:
  default.conf: "server {\n        listen localhost:8080 default_server ssl;\n\n        root
    /usr/share/nginx/html;\n        index index.html;\n\n\tssl on;\n        ssl_certificate
    /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\tssl_client_certificate
    /etc/nginx/conf.d/ca.crt;\n\n        location / {\n                try_files $uri
    $uri/ =404;\n        }\n}\n"
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIICzDCCAbSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAXMRUwEwYDVQQDDAxOQUhT
    T0ZUIENBIzEwHhcNMTcxMTAyMTY0MzUzWhcNMTgxMTAyMTY0MzUzWjAXMRUwEwYD
    VQQDDAxOQUhTT0ZUIENBIzEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
    AQCqvM2M7m6B5AjHRkpJEGNhfCMjRGUZZntAi6UeRaOapni2ZnPKSuKtBTxzY+Zk
    CDYPw35mgX+FNNVFax7jKMKqY+iGfi1XXRgS82x63toyI72jfwT5we+Ne73lZYS6
    Lr3nRwWgU8FJ4GRPQR22b4K34tx5qfkQqmBcQHkoLFsVslHihjs3cYeE4qe+mo58
    YLH+EP+ClbcY8qJLHCXJdOZWsDsOdVFeXwS26HtiuKKp5Q3DdOQx0sx7rkfboNqf
    i8//LN+6vysCgkAjlKSHTNA5RKQa1pa0v+Mhc6DQGJMGkWeZMgNewwPZakw3gHuk
    UFQzSj4PREnzzzLOkaEIreSjAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICBDAPBgNV
    HRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCPaRYTLMH1LZezdMastS1N
    E2ds3+1gGbnUP48ZAPye+JeHH7CrxvixeL6+nzzi1MMoinH6G1upfJdpsF1szQTG
    X9ycaOkIwsjYrIELsPTA2II/3od8wJzOxD9fxUwnp8kw+5hMu8IGA4b4wKSP4UiL
    7QtsvaorWkdDAxneV96rnQ0HGU2paDjKG9LWKh/TXy/CSzMP37aQJn+J39zbjSzr
    iqbrawOucRmmo3NSDDX8go124QEgKhzYWHMBbjBp03t2cZC3aBTVuVR5HZSmC5ke
    /499t31zH5IKpEA+FfgX4yehLkmEBsmUogeojoPESEKgtwvPmLJCR1vayUYfPegL
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  name: nginxconfigmap
  namespace: myproject
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: my-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
      - name: secret-volume
        secret:
          secretName: nginxsecret
      - name: proxy-tls
        secret:
          secretName: tls
      - name: configmap-volume
        configMap:
          name: nginxconfigmap
      serviceAccountName: proxy
      containers:
       - name: oauth-proxy 
         image: localhost:5000/oauth-proxy-ca:v1.0.0
         ports:            
         - containerPort: 8443                         
           name: public    
         args:             
         - --https-address=:8443                       
         - --provider=openshift                        
         - --openshift-service-account=proxy           
         - --upstream=https://localhost:8080            
         - --tls-cert=/etc/tls/private/tls.crt         
         - --tls-key=/etc/tls/private/tls.key          
         - --cookie-secret=SECRET                      
         volumeMounts:     
         - mountPath: /etc/tls/private                 
           name: proxy-tls 
       - name: nginx
         image: localhost:5000/newnginxhttps:1.1
         command: ["/home/auto-reload-nginx.sh"]
         ports:
         - containerPort: 8080
         volumeMounts:
         - mountPath: /etc/nginx/ssl
           name: secret-volume
         - mountPath: /etc/nginx/conf.d
           name: configmap-volume
